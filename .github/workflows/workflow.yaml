name: "ci/cd github actions"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Rodar testes com Maven
        run: mvn test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Copiar application-.example.properties para application.properties
        run: cp src/main/resources/application-example.properties src/main/resources/application.properties

      - name: Configurar Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Buildando a aplicação
        run: mvn clean package -DskipTests

      - name: Upload do artefato (target/)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/


  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Baixar artefato do build
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Mover .jar para target/
        run: mkdir -p target && mv mini-mundo-0.0.1-SNAPSHOT.jar target/
          
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ vars.DOCKER_PASSWORD }}

      - name: Build com Docker Compose
        run: docker compose build

      - name: Tag e push da imagem
        run: |
          docker tag ${{ vars.DOCKER_IMAGE }} ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE }}
          docker push ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE }}